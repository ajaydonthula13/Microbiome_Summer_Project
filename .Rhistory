phy_sub                      # your phyloseq object
)
pcoa_df <- phy_sub_filt |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
pcoa() |>
(\(res) res$vectors[,1:2])() |>
as_tibble(rownames = "SampleID", .name_repair = "minimal") |>
rename(PCoA1 = V1, PCoA2 = V2) |>
left_join(
phy_sub_filt |>
sample_data() |>
as_tibble(rownames = "SampleID") |>
select(SampleID, sample_type),
by = "SampleID"
)
dist_mat <- phy_sub_filt |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
as.matrix()
# Print the full square matrix
print(dist_mat)
View(dist_mat)
library(tibble)
library(tidyr)
dist_tbl <- dist_mat |>
as.data.frame() |>
rownames_to_column("Sample1") |>
pivot_longer(
cols      = -Sample1,
names_to  = "Sample2",
values_to = "BrayCurtis"
) |>
# keep only one of (i,j) vs (j,i)
filter(Sample1 < Sample2)
# View the tidy table
print(dist_tbl)
View(dist_tbl)
library(tibble)
library(tidyr)
library(ggplot2)
library(viridis)
# turn your square matrix into a long data frame
heatmap_df <- dist_mat |>
as.data.frame() |>
rownames_to_column("SampleA") |>
pivot_longer(
cols      = -SampleA,
names_to  = "SampleB",
values_to = "BrayCurtis"
)
# draw the heatmap
heatmap_df |>
ggplot(aes(x = SampleB, y = SampleA, fill = BrayCurtis)) +
geom_tile() +
scale_fill_viridis_c(option = "C", name = "Bray–Curtis") +
labs(
title = "Pairwise Bray–Curtis Dissimilarity Heatmap",
x     = "Sample B",
y     = "Sample A"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
axis.text.y = element_text(size = 6),
plot.title  = element_text(face = "bold", hjust = 0.5)
)
pcoa_df |>
ggplot(aes(x = PCoA1, y = PCoA2, color = sample_type)) +
geom_point(size = 3) +
labs(
title = "PCoA of Bray–Curtis Distances",
x     = "PCoA Axis 1",
y     = "PCoA Axis 2"
) +
theme_minimal()
pcoa_df <- phy_sub_filt |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
pcoa() |>
(\(res) res$vectors[, 1:2])() |>
as_tibble(rownames = "SampleID", .name_repair = "minimal") |>
rename(
PCoA1 = `Axis.1`,
PCoA2 = `Axis.2`
) |>
left_join(
phy_sub_filt |>
sample_data() |>
as_tibble(rownames = "SampleID") |>
select(SampleID, sample_type),
by = "SampleID"
)
pcoa_df |>
ggplot(aes(x = PCoA1, y = PCoA2, color = sample_type)) +
geom_point(size = 3) +
labs(
title = "PCoA of Bray–Curtis Distances",
x     = "PCoA Axis 1",
y     = "PCoA Axis 2"
) +
theme_minimal()
# Subset & drop empty samples by type
stool_phy <- phy_sub |>
subset_samples(sample_type == "Stool") |>
prune_samples(sample_sums(.) > 0, .)
# Subset & drop empty samples by type
stool_phy <- phy_sub |>
subset_samples(sample_type == "Stool") |>
(\(x) prune_samples(sample_sums(x) > 0, x))()
saliva_phy <- phy_sub |>
subset_samples(sample_type == "Saliva") |>
(\(x) prune_samples(sample_sums(x) > 0, x))()
# Get taxa names present in each
stool_taxa  <- taxa_names(stool_phy)
saliva_taxa <- taxa_names(saliva_phy)
# Intersection: taxa that occur in both
common_taxa <- intersect(stool_taxa, saliva_taxa)
length(common_taxa)  # how many shared taxa
# Prune the filtered phyloseq object to only those common taxa
common_phy <- prune_taxa(common_taxa, phy_sub_filt)
# Compute distance matrix
dist_common <- common_phy |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
as.matrix()
# Print / view
print(dist_common)
View(dist_common)
# Tidy lower-triangle for export or inspection
dist_common_tbl <- dist_common |>
as.data.frame() |>
rownames_to_column("SampleA") |>
pivot_longer(
cols      = -SampleA,
names_to  = "SampleB",
values_to = "BrayCurtis"
) |>
filter(SampleA < SampleB)
print(dist_common_tbl)
View(dist_common_tbl)
pcoa_common_df <- common_phy |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
pcoa() |>
(\(res) res$vectors[,1:2])() |>
as_tibble(rownames = "SampleID", .name_repair = "minimal") |>
rename(
PCoA1 = `Axis.1`,
PCoA2 = `Axis.2`
) |>
left_join(
common_phy |>
sample_data() |>
as_tibble(rownames = "SampleID") |>
select(SampleID, sample_type),
by = "SampleID"
)
pcoa_common_df |>
ggplot(aes(x = PCoA1, y = PCoA2, color = sample_type)) +
geom_point(size = 3) +
labs(
title = "PCoA of Bray–Curtis on Common Taxa",
x     = "PCoA Axis 1",
y     = "PCoA Axis 2"
) +
theme_minimal()
# ------------------------------
# 8. Heatmap of Bray–Curtis on Common Taxa
# ------------------------------
library(pheatmap)
library(viridis)
# 8a) Build an ordering from the common‐taxa PCoA
order_common <- pcoa_common_df |>
arrange(sample_type, PCoA1) |>
pull(SampleID)
# 8b) Reorder the common‐taxa distance matrix
mat_common_ord <- dist_common[order_common, order_common]
# 8c) Build annotation strip
annot_common <- common_phy |>
sample_data() |>
as_tibble(rownames="SampleID") |>
select(SampleID, sample_type) |>
column_to_rownames("SampleID")
# 8d) Draw the heatmap
pheatmap(
mat_common_ord,
cluster_rows   = FALSE,
cluster_cols   = FALSE,
show_rownames  = FALSE,
show_colnames  = FALSE,
annotation_row = annot_common,
annotation_col = annot_common,
color          = viridis(50),
main           = "Bray–Curtis on Shared Taxa"
)
# ------------------------------
# 5. Identify common taxa between Stool & Saliva
# ------------------------------
stool_phy <- phy_sub |>
subset_samples(sample_type == "Stool") |>
(\(x) prune_samples(sample_sums(x) > 0, x))()
saliva_phy <- phy_sub |>
subset_samples(sample_type == "Saliva") |>
(\(x) prune_samples(sample_sums(x) > 0, x))()
stool_taxa  <- taxa_names(stool_phy)
saliva_taxa <- taxa_names(saliva_phy)
common_taxa <- intersect(stool_taxa, saliva_taxa)
common_phy  <- prune_taxa(common_taxa, phy_sub_filt)
# ------------------------------
# 6. Distance & similarity on common taxa
# ------------------------------
dist_common <- common_phy |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist(method = "bray") |>
as.matrix()
# convert to similarity
sim_common <- 1 - dist_common
# (optional) tidy lower triangle for export
dist_common_tbl <- dist_common |>
as.data.frame() |>
rownames_to_column("SampleA") |>
pivot_longer(-SampleA,
names_to  = "SampleB",
values_to = "BrayCurtis") |>
filter(SampleA < SampleB)
# ------------------------------
# 7. PCoA on common-taxa Bray–Curtis
# ------------------------------
pcoa_common_df <- common_phy |>
otu_table() |>
as.data.frame() |>
t() |>
vegdist("bray") |>
pcoa() |>
(\(res) res$vectors[, 1:2])() |>
as_tibble(rownames = "SampleID", .name_repair = "minimal") |>
rename(PCoA1 = `Axis.1`, PCoA2 = `Axis.2`) |>
left_join(
common_phy |>
sample_data() |>
as_tibble(rownames = "SampleID") |>
select(SampleID, sample_type),
by = "SampleID"
)
pcoa_common_df |>
ggplot(aes(x = PCoA1, y = PCoA2, color = sample_type)) +
geom_point(size = 3) +
labs(
title = "PCoA of Bray–Curtis on Shared Taxa",
x     = "PCoA Axis 1",
y     = "PCoA Axis 2"
) +
theme_minimal()
# ------------------------------
# 8. Heatmap of shared-taxa similarity
# ------------------------------
library(pheatmap)
library(viridis)
order_common <- pcoa_common_df |>
arrange(sample_type, PCoA1) |>
pull(SampleID)
mat_sim_ord <- sim_common[order_common, order_common]
annot_common <- common_phy |>
sample_data() |>
as_tibble(rownames = "SampleID") |>
select(SampleID, sample_type) |>
column_to_rownames("SampleID")
pheatmap(
mat_sim_ord,
cluster_rows   = FALSE,
cluster_cols   = FALSE,
show_rownames  = FALSE,
show_colnames  = FALSE,
annotation_row = annot_common,
annotation_col = annot_common,
color          = viridis(50),
main           = "Shared-Taxa Similarity (1 – Bray–Curtis)"
)
# ------------------------------
# 8. Heatmap of Bray–Curtis on Common Taxa
# ------------------------------
library(pheatmap)
library(viridis)
# 8a) Build an ordering from the common‐taxa PCoA
order_common <- pcoa_common_df |>
arrange(sample_type, PCoA1) |>
pull(SampleID)
# 8b) Reorder the common‐taxa distance matrix
mat_common_ord <- dist_common[order_common, order_common]
# 8c) Build annotation strip
annot_common <- common_phy |>
sample_data() |>
as_tibble(rownames="SampleID") |>
select(SampleID, sample_type) |>
column_to_rownames("SampleID")
# 8d) Draw the heatmap
pheatmap(
mat_common_ord,
cluster_rows   = FALSE,
cluster_cols   = FALSE,
show_rownames  = FALSE,
show_colnames  = FALSE,
annotation_row = annot_common,
annotation_col = annot_common,
color          = viridis(50),
main           = "Bray–Curtis on Shared Taxa"
)
common_prev <- common_phy |>
otu_table() |>
as.data.frame() |>
# presence/absence matrix
mutate(across(everything(), ~ as.integer(.x > 0))) |>
t() |>
as.data.frame() |>
rownames_to_column("Taxon") |>
pivot_longer(-Taxon, names_to = "SampleID", values_to = "Present") |>
group_by(Taxon) |>
summarize(
Prevalence = sum(Present),
.groups    = "drop"
) |>
arrange(desc(Prevalence))
common_prev |>
slice_head(n = 20) |>
knitr::kable(
col.names = c("Taxon", "Number of Samples"),
digits    = 0
)
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.9 * n_samps) |>
pull(Taxon)
View(n_samps)
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.9 * n_samps) |>
pull(Taxon)
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.7 * n_samps) |>
pull(Taxon)
common_prev |>
slice_head(n = 20) |>
knitr::kable(
col.names = c("Taxon", "Number of Samples"),
digits    = 0
)
tax_df <- common_phy |>
tax_table()        |>
as.data.frame()   |>
rownames_to_column("Taxon")
common_prev |>
slice_head(n = 20) |>
left_join(tax_df, by = "Taxon") |>
select(
Taxon,
Kingdom, Phylum, Class, Order, Family, Genus,       # add/remove ranks as desired
Prevalence                                          # # samples present
) |>
knitr::kable(
col.names = c(
"OTU ID", "Kingdom", "Phylum", "Class", "Order",
"Family", "Genus", "Samples Present"
),
digits    = 0
)
print(rank_names(common_phy))
tax_table(common_phy)[1:5, ]
print(rank_names(common_phy))
tax_df <- common_phy |>
tax_table()     |>
as.data.frame() |>
rownames_to_column("Taxon")
common_prev |>
slice_head(n = 20) |>
left_join(tax_df, by = "Taxon") |>
select(
Taxon,
Kingdom, Phylum, Class, Order, Family, Genus, Species,   # include Species
Prevalence                                              # # samples present
) |>
knitr::kable(
col.names = c(
"OTU ID", "Kingdom", "Phylum", "Class", "Order",
"Family", "Genus", "Species", "Samples Present"
),
digits    = 0
)
# 9a) Compute per‐OTU prevalence (# of samples in which each OTU appears)
common_prev <- common_phy |>
otu_table() |>
as.data.frame() |>
# OTUs are rows, samples are cols
rownames_to_column("Taxon") |>
mutate(
Prevalence = rowSums(across(-Taxon) > 0)
) |>
arrange(desc(Prevalence))
tax_df <- common_phy |>
tax_table()       |>
as.data.frame()   |>
rownames_to_column("Taxon")
common_prev |>
slice_head(n = 20) |>
left_join(tax_df, by = "Taxon") |>
select(
Taxon,
Kingdom, Phylum, Class, Order, Family, Genus, Species,
Prevalence
) |>
knitr::kable(
col.names = c(
"OTU ID", "Kingdom","Phylum","Class","Order",
"Family","Genus","Species","Samples Present"
),
digits    = 0
)
View(common_prev)
print(rank_names(common_phy))
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.7 * n_samps) |>
pull(Taxon)
common_prev |>
slice_head(n = 20) |>
left_join(tax_df, by = "Taxon") |>
select(
Taxon,
Kingdom, Phylum, Class, Order, Family, Genus, Species,
Prevalence
) |>
knitr::kable(
col.names = c(
"OTU ID", "Kingdom","Phylum","Class","Order",
"Family","Genus","Species","Samples Present"
),
digits    = 0
)
install.packages("reactable")
library(reactable)
reactable(
top20_df,
filterable       = TRUE,
defaultPageSize  = 20,
columns = list(
OTU = colDef(name = "OTU ID", minWidth = 200),
Kingdom = colDef(minWidth = 100),
Genus   = colDef(minWidth = 150),
# etc…
`Samples Present` = colDef(aggregate = "max")
)
)
top20_df <- common_prev |>
slice_head(n = 20) |>
left_join(tax_df, by = "Taxon") |>
rename(OTU = Taxon, `Samples Present` = Prevalence) |>
select(
OTU,
Kingdom, Phylum, Class, Order, Family, Genus, Species,
`Samples Present`
)
top20_df |>
knitr::kable(
col.names = c(
"OTU ID", "Kingdom", "Phylum", "Class", "Order",
"Family", "Genus", "Species", "Samples Present"
),
digits = 0
)
# 9d. Interactive table via reactable
library(reactable)
reactable(
top20_df,
columns = list(
OTU = colDef(name = "OTU ID", minWidth = 200),
Kingdom = colDef(minWidth = 100),
Phylum  = colDef(minWidth = 100),
Class   = colDef(minWidth = 120),
Order   = colDef(minWidth = 120),
Family  = colDef(minWidth = 140),
Genus   = colDef(minWidth = 160),
Species = colDef(minWidth = 160),
`Samples Present` = colDef(
name    = "Samples Present",
aggregate = "max"
)
),
filterable      = TRUE,
defaultPageSize = 20
)
print(rank_names(common_phy))
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.7 * n_samps) |>
pull(Taxon)
n_samps <- nsamples(common_phy)
common_prev |>
filter(Prevalence >= 0.6 * n_samps) |>
pull(Taxon)
